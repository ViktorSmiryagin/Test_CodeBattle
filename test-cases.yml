---
- summary: |
    Проверка мобильной версии 
  requirement: |
    Сайт должен иметь мобильную версию
  prerequisites: |
    Пользователь авторизован
  test-data: |
    "no-data"  
  steps:
    - Открываем DevTools
    - Нажимаем кнопку «Toggle device toolb"
    - Выбираем мобильное устройства
  expected-result: |
    Открывается мобильная версий сайта

---
- sumamary: |
      Проверка успешной регистрации
  requirements: >
    Пользователь должен иметь возможность зарегистрироваться на сайте при помощи формы регистрации;
  preresequisites: |
    Вошли на страницу регистрации "sign up"
  test-data: |
    email:hexletvik@gmail.com nickname: hexletvik  password: Hexlet2024 
  steps:
    - Производим ввод nickname
    - Производим ввод email
    - производим ввод Password
    - Производим повторный ввод  password
    - Прожимаем кнопку "Submt"
  expected-result: |
    Успешня регистрация
---
- summary: |
    Проверка успешной авторизации 
  requirement: |
    Пользователь должен иметь возможность войти в свой аккунт при помощи email и password введенного при регистрации;
  prerequisites: |
    Вошли на страницу авторизации "sign in"
    Пользователь ранее зарегистрирован  
  test-data: |
    email: hexletvik@gmail.com and password Hexlet2024  
  steps:
    - Вписываем email
    - Вписываем пороль
    - Прожимаем на кнопку "Submit"
  expected-result: |
    Пользователь успешно авторизован

---
- sumamary: |
    Проверка успешной авторизации при помощи Github
  requirements: |
    Пользователь может войти в свой аккаунт при помощи своего аккаунта в Github
  preresequisites: |
    Вошли на страницу регистрации "sign up"
    Пользователь имеет аккаунт в Github и авторизирован в нем
  test-data: |
    "no-data"
  steps:
    - Прожимаем кнопку "sign in with Github"
  expected-result: |
    Успешня авторизация

---
- sumamary: |
    Проверка Успешной авторизации при помощи Discord
  requirements: |
    Пользователь может войти в свой аккаунт при помощи своего аккаунта в Discord
  preresequisites: |
    Вошли на страницу регистрации "sign up"
    Пользователь имеет аккаунт в Discrod и авторизирован в нем
  test-data: |
    "no-data"
  steps:
    - Прожимаем кнопку "sign in with Discord"
  expected-result: |
    Успешня авторизация
---

- summary: |
    Проверить возможность смены языка программирования во время игры    
  requirement: |
    Пользователь может менять язык программирования во время игры
  prerequisites: |
    Пользователь авторизован
    Находимся в созданной комнате(задание: "boom", level (*), game type (with a bot) time 3 min 
  test-data: |
     No-date  
  steps:
    - открываем панель с языками программирования
    - Выбираем другой (например python)
  expected-result: |
    Язык программирования будет успешно изменен
---
- summary: |
    Проверка успешного перезахода в игру    
  requirement: |
    Пользователь должен иметь возможность переключиться обратно в игру.
  prerequisites: |
    Пользователь авторизован
    Находимся в игровой комнате с ботом  
  test-data: |
     no-date  
  steps:
    - Нажать на кнопку "Back to home"
    - Нажать на кнопку "continue"
  expected-result: |
    Игра будет успешно продолжена.
---
- summary: |
    Проверка создания игры с режимом игры против бота
  requirement: >
    Пользователь может создавать свою игру с выбором( уровня сложности,
    времени матча, режима игры, задания или тега);
  prerequisites: |
    Пользователь авторизирован
  test-data: |
    No-data
  steps:
    - Прожимаем на кнопку "Create a game"
    - Прожимаем на кнопку "With a bot"
    - Прожимаем на кнопку "Create Battle"
  expected-result: |
    Игра c ботом создана успешно

---
- summary: |
    Проверка создания игры с уровнем сложности равный 2 звезды
  requirement: >
    Пользователь может создавать свою игру с выбором( уровня сложности,
    времени матча, режима игры, задания или тега);
  prerequisites: |
    Пользователь авторизирован
  test-data: |
    No-data
  steps:
    - Прожимаем на кнопку "Create a game"
    - Выбираем Game Type (with a bot)
    - Прожимаем на кнопку "Ввиде двух звезд" (level)
    - Прожимаем на кнопку "Create Battle"
  expected-result: |
    Игра c уровнем сложности ** будет успешно создана

---
- summary: |
    Проверка создания игры с задание add_two_number
  requirement: >
    Пользователь может создавать свою игру с выбором( уровня сложности,
    времени матча, режима игры, задания или тега);
  prerequisites: |
    Пользователь авторизирован
  test-data: |
    No-data
  steps:
    - Прожимаем на кнопку "Create a game"
    - Выбираем Game Type (with a bot)
    - Открываем список заданий
    - Из списка выбираем задание "add_two_number
    - Прожимаем на кнопку "Create Battle"
  expected-result: |
    Будет создана игра с выбраным заданием

---
- summary: >
    Проверка возможности создания новой игры с выбором времени для матча равный 8 мин
  requirement: >
    Пользователь может создавать свою игру с выбором( уровня сложности,
    времени матча, режима игры, задания или тега);
  prerequisites: |
    Пользователь авторизован  
  test-data: |
    no-date
  steps:
    - Нажать на кнопку "CREATE A GAME"
    - Выбираем Game Type (with a bot)
    - Продвинуть ползунок к (8 min)
    - Нажать кнопку "CREATE BATTLE"
  expected-result: |
    Игра успешно создана с установленным временем для матча.

- summary: |
    Проверка фильтрации списка заданий с помощью тега "math" 
  requirement: |
    Пользователь имеет возможность фильтрации списка заданий при помощи (тегов, уровня сложности, типа игры и ввида заданий) 
  prerequisites: |
    Пользователь авторизован
  test-data: |
    No-data
  steps:
    - Нажимаем на кнопку "Create a game"
    - Нажимаем на кнопку "math" 
    - Открываем список заданий
  expected-result: |     
    Список заданий должен быть отфильтрован в соответствии с выбранным тегом
---

- summary: |
    Проверка создания игры с выбраным тегом "math"
  requirement: >
    Пользователь может создавать свою игру с выбором (уровня сложности, времени матча, режима игры, задания или тега);
  prerequisites: |
    Пользователь авторизирован
  test-data: |
    No-data
  steps:
    - Прожимаем на кнопку "Create a game"
    - Выбираем Game Type (with a bot)
    - Нажимаем на тег "math"
    - Прожимаем на кнопку "Create Battle"
  expected-result: |
    Созданая игра будет с заданием согласно тегу "math"
---
- summary: |
    Проверка фильтрации списка заданий при изменения уровня сложности равный 4 звезды
  requirement: |
    Пользователь имеет возможность фильтрации списка заданий при помощи (тегов, уровня сложности, типа игры и ввида заданий) 
  prerequisites: |
    Пользователь авторизован
  test-data: |
    No-data
  steps:
    - Нажимаем на кнопку "Create a game"
    - Нажимаем на кнопку "Ввиде 4 звезд" (level) 
    - Открываем список заданий
  expected-result: |     
    Список заданий должен быть отфильтрован в соответствии с выбранным уровнем сложности
---
- summary: |
    Проверка локализации задания на русский язык
  requirement: |
    Задачи даны на двух языках - на русском и на английском; 
  prerequisites: |
    Пользователь авторизован
  test-data: |
    No-data
  steps:
    - Нажимаем на кнопку "Fight"
    - открываем список с языками (ru/en) выбираем ru
  expected-result: |
    Задача будет отображена на русском языке.

---
- summary: >
     - Проверка поля ввода email при регистрации
  requirement: >
     - Почта при регистрации или авторизации не может быть пустой;
  prerequisites: |
    Пользователь не авторизирован
  test-data: |
    email:- nickname: hexletvik  password: Hexlet2024 
  steps:
    - Вводим "nickname"
    - Вводим "password"
    - Вводим "Password Confirmation"
    - Прожимаем "Submit"
  expected-result: |
    Выводится ошибка "Введите email"
---
- summary: |
    Проверка регистрации с nickname существующий в системе
  requirement: >
    Пользователь не может взять nickname который уже пристусвует в системе;
  prerequisites: |
     Имеется аккаунт с nickname: Hexletvik
  test-data: |
    email: Vikthex2024@gmail.com password: Helxlet2024 nickname: Hexletvik
  steps:
    - Вводим email
    - Вводим Nickname
    - Вводим password
    - Вводим Password Confirmation
    - Прожимаем "submit"
  expected-result: |
    Выводится ошибка "Данное имя уже занято"
---
- summary: |
    Проверка чата во время игровой сессии
  requirement: |
    Во время игры участники должны иметь возможность общаться в чате;
  prerequisites: |
    Аккаунт авторизирован
    Пользователь в главном меню
  test-data: |
    no-data
  steps: |
    - Прожимаем кнопку "Create a Game"
    - Выбираем  "Game Type" (With a bot)
    - Прожимаем "Create battle"
    - В поле чата вводим "GL HF"
    - Прожимаем "send" 
  expected-result: |
    В чате выводится сообщение "GL HF"

---
- summary: |
    Проверка чата вне игровой сессии
  requirement: |
    В главном меню есть чат для зарегистрированных пользователей;
  prerequisites: |
    Аккаунт авторизирован
    Пользователь в главном меню
  test-data: |
    no-dat
  steps: |
    - В поле чата вводим "Hello"
    - Прожимаем "send" 
  expected-result: |
    В чате выводится сообщение "Hello"
---
- summary: |
    Проверка воспроизвдения записи завершеной игры
  requirement: |
    Завершенная игра доступна в записи
  prerequisites: |
    Имеется ранее завершенная игра
  test-data: |
     no-date
  steps: |
    - Переходим "My profile" 
    - Прожимаем "Completed games"
    - Прожимаем "show" 
  expected-result: |
    Выводится запись завершенной вами игры
---
- summary: |
    Проверка воспроизвдения игровой сессий онлайн
  requirement: |
    Другие пользователи могут следить за ходом игры
  prerequisites: |
    Пользователь на главной странице
  test-data: |
     no-date
  steps: |
    - переходим во вкладку "LOBBY"
    - Прожимаем "Show" 
  expected-result: |
    Выводится  онлайн игровая сессия других пользователей
---
- summary: |
    Проверка повышения рейтинга
  requirement: >
    Пользователи получают очки, на основе которых строится рейтинг за
    неделю, месяц и за все время;
  prerequisites: |
    Пользователь в игровой сессии против другого пользователя(подставного) (задание: "rect area", level (*), game type (with other players) time 3 min)
    Аккаунт №1 авторизирован с помощью Github, Аккаунт №2 авторизирован с помощью Discord (аккаунт победителя до победы(elo_rating 1200 очков)
  test-data: |
    const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;
    module.exports = solution;
  steps: |
    - Вводим код из "test-date"
    - Прожимаем "run"
  expected-result: |
    Кол-во очков после боя увеличилось (elo_rating 1208)
---
- summary: |
    Проверка работы ссылки
  requirement: >
      В игру можно играть с любым человеком, с ботом или другом (игра будет доступна по ссылке);
  prerequisites: |
    Пользователь авторизирован например через Github
    имеем стороний авторизированный аккаунт например через Discor 
  test-data: |
    level: 2 , game type: (friend), name: age_two_days , time contorl 3 min;
  steps:
    - Прожимаем на кнопку "Create a game"
    - Настраиваем игру согласно "test data"
    - Копируем ссылку 
    - Отправляем ссылку
    - переходим по ссылке на сторонем аккаунте
  expected-result: |
    стороний аккаунт успешно подключен, ссылка работает
---
- summary: |
    Проверка отображения положения информации о пользователе в рейтинговой таблице за месяц
  requirement: >
    Пользователи могут просмотреть свое положение в рейтинговой таблице
    за (неделю, месяц и за все время);
  prerequisites: |
    Пользователь авторизирован  
  test-data: |
    no-date
  steps: |
    - Нажимаем на имя свого профиля
    - Из списка нажимаем "users raiting"
    - Переходим во вкладку (monthly)
    - В поиск вводим свой nickname 
  expected-result: |
    Отображена информация о пользователе в рейтинге за месяц
